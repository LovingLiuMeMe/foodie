<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lovingliu.mapper.CategoryMapperCustom" >
  <resultMap id="MyCategoryVo" type="cn.lovingliu.pojo.vo.CategoryVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="father_id" property="fatherId" jdbcType="INTEGER" />
    <!--
      collection 标签:
      property: 属性名
      ofType: 集合类型
    -->
    <collection property="subCatList" ofType="cn.lovingliu.pojo.vo.SubCategoryVO">
      <id column="subId" property="subId" jdbcType="INTEGER" />
      <result column="subName" property="subName" jdbcType="VARCHAR" />
      <result column="subType" property="subType" jdbcType="INTEGER" />
      <result column="subFatherId" property="subFatherId" jdbcType="INTEGER" />
    </collection>
  </resultMap>
  <!--
    left join 左链接查询,f表的内容会有1个/多个（重复数据）
  -->
  <select id="getSubCatList" resultMap="MyCategoryVo" parameterType="int">
    select
      f.id as id,
      f.`name` as name,
      f.type as type,
      f.father_id as fatherId,
      c.id as subId,
      c.`name` as subName,
      c.type as subType,
      c.father_id as subFatherId
    from
        category f
    left join
        category c
    on
        f.id = c.father_id
    where
        f.father_id = #{rootCatId}
  </select>

  <resultMap id="MyNewItemsVo" type="cn.lovingliu.pojo.vo.NewItemsVO" >
    <id column="rootCatId" property="rootCatId" jdbcType="INTEGER" />
    <result column="rootCateName" property="rootCateName" jdbcType="VARCHAR" />
    <result column="slogan" property="slogan" jdbcType="VARCHAR" />
    <result column="catImage" property="catImage" jdbcType="VARCHAR" />
    <result column="bgColor" property="bgColor" jdbcType="VARCHAR" />
    <!--
      collection 标签:
      property: 属性名
      ofType: 集合类型
    -->
    <collection property="simpleItemList" ofType="cn.lovingliu.pojo.vo.SimpleItemVO">
      <id column="itemId" property="itemId" jdbcType="VARCHAR" />
      <result column="itemName" property="itemName" jdbcType="VARCHAR" />
      <result column="itemUrl" property="itemUrl" jdbcType="VARCHAR" />
      <result column="createdTime" property="createdTime" jdbcType="TIMESTAMP" />
    </collection>
  </resultMap>
  <select id="getSixNewItemsLazy" resultMap="MyNewItemsVo" parameterType="map">
    select
      fc.id as rootCatId,
      fc.`name` as rootCateName,
      fc.slogan as slogan,
      fc.cat_image as catImage,
      fc.bg_color as bgColor,
      i.id as itemId,
      i.item_name as itemName,
      ii.url as itemUrl,
      i.created_time as createdTime
    from
        category fc
    LEFT JOIN items i on fc.id = i.root_cat_id
    LEFT JOIN items_img ii on i.id = ii.item_id
    where
        fc.type = 1
    and
        i.root_cat_id = #{paramsMap.rootCatId}
    and
        ii.is_main = 1
    ORDER BY
        i.created_time
    DESC
    LIMIT 0,6
  </select>
</mapper>