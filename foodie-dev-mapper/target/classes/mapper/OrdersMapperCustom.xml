<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lovingliu.mapper.OrdersMapperCustom" >
  <resultMap id="myOrdersVONotUse" type="cn.lovingliu.pojo.vo.MyOrdersVO" >
    <id column="orderId" property="orderId" jdbcType="VARCHAR" />
    <result column="createdTime" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="payMethod" property="payMethod" jdbcType="INTEGER" />
    <result column="realPayAmount" property="realPayAmount" jdbcType="INTEGER" />
    <result column="postAmount" property="postAmount" jdbcType="INTEGER" />
    <result column="isComment" property="isComment" jdbcType="INTEGER" />
    <result column="orderStatus" property="orderStatus" jdbcType="INTEGER" />
    <collection property="subOrderItemList" ofType="cn.lovingliu.pojo.vo.MySubOrderItemVO">
      <id column="itemSpecId" property="itemSpecId"/>
      <result column="itemId" property="itemId" jdbcType="VARCHAR" />
      <result column="itemImg" property="itemImg" jdbcType="VARCHAR" />
      <result column="itemName" property="itemName" jdbcType="VARCHAR" />
      <result column="itemSpecName" property="itemSpecName" jdbcType="VARCHAR" />
      <result column="buyCounts" property="buyCounts" jdbcType="INTEGER" />
      <result column="price" property="price" jdbcType="INTEGER" />
    </collection>
  </resultMap>

  <resultMap id="myOrdersVO" type="cn.lovingliu.pojo.vo.MyOrdersVO" >
    <id column="orderId" property="orderId" jdbcType="VARCHAR" />
    <result column="createdTime" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="payMethod" property="payMethod" jdbcType="INTEGER" />
    <result column="realPayAmount" property="realPayAmount" jdbcType="INTEGER" />
    <result column="postAmount" property="postAmount" jdbcType="INTEGER" />
    <result column="isComment" property="isComment" jdbcType="INTEGER" />
    <result column="orderStatus" property="orderStatus" jdbcType="INTEGER" />

    <collection
            property="subOrderItemList"
            select="querySubItems"
            column="orderId"
            ofType="cn.lovingliu.pojo.vo.MySubOrderItemVO">
      <id column="itemSpecId" property="itemSpecId"/>
      <result column="itemId" property="itemId" jdbcType="VARCHAR" />
      <result column="itemImg" property="itemImg" jdbcType="VARCHAR" />
      <result column="itemName" property="itemName" jdbcType="VARCHAR" />
      <result column="itemSpecName" property="itemSpecName" jdbcType="VARCHAR" />
      <result column="buyCounts" property="buyCounts" jdbcType="INTEGER" />
      <result column="price" property="price" jdbcType="INTEGER" />
    </collection>
  </resultMap>

  <!-- pageHelper 和 嵌套关系的使用时会出现异常: 由于嵌套结果方式会导致结果集被折叠，因此分页查询的结果在折叠后总数会减少，所以无法保证分页结果数量正确。-->
  <select id="queryMyOrdersNotUse" parameterType="map" resultMap="myOrdersVONotUse">
    select
      od.id as orderId,
      od.created_time as createdTime,
      od.pay_method as payMethod,
      od.real_pay_amount as realPayAmount,
      od.post_amount as postAmount,
      od.is_comment as isComment,
      os.order_status as orderStatus,
      oi.item_id as itemId,
      oi.item_name as itemName,
      oi.item_img as itemImg,
      oi.item_spec_id as itemSpecId,
      oi.item_spec_name as itemSpecName,
      oi.buy_counts as buyCounts,
      oi.price as price
    from
        orders od
    left join
        order_status os
    on od.id = os.order_id
    left join
        order_items oi
    on od.id = oi.order_id
    where
        od.user_id = #{paramsMap.userId}
    and
        od.is_delete = 0
        <if test="paramsMap.orderStatus != null">
            and order_status = #{paramsMap.orderStatus}
        </if>
    order by
        od.updated_time desc
  </select>




  <select id="queryMyOrders" parameterType="map" resultMap="myOrdersVO">
    select
    od.id as orderId,
    od.created_time as createdTime,
    od.pay_method as payMethod,
    od.real_pay_amount as realPayAmount,
    od.post_amount as postAmount,
    od.is_comment as isComment,
    os.order_status as orderStatus
    from
    orders od
    left join
    order_status os
    on od.id = os.order_id
    where
    od.user_id = #{paramsMap.userId}
    and
    od.is_delete = 0
    <if test="paramsMap.orderStatus != null">
      and order_status = #{paramsMap.orderStatus}
    </if>
    order by
    od.updated_time desc
  </select>

  <select id="querySubItems" parameterType="String" resultType="cn.lovingliu.pojo.vo.MySubOrderItemVO">
    select
      oi.item_id as itemId,
      oi.item_name as itemName,
      oi.item_img as itemImg,
      oi.item_spec_id as itemSpecId,
      oi.item_spec_name as itemSpecName,
      oi.buy_counts as buyCounts,
      oi.price as price
    from
    order_items oi
    where
    oi.order_id = #{orderId}
  </select>

  <select id="getMyOrderStatusCounts" parameterType="map" resultType="int">
    select
      count(1)
    from
      orders o
    left join
      order_status os
    on
      o.id = os.order_id
    where
      o.user_id = #{paramsMap.userId}
    and
      os.order_status = #{paramsMap.orderStatus}
    <if test="paramsMap.isComment != null">
        and o.is_comment = #{paramsMap.isComment}
    </if>
  </select>

  <select id="getMyOrderTrend" parameterType="map" resultType="cn.lovingliu.pojo.OrderStatus">
    select
      os.order_id as orderId,
      os.order_status as orderStatus,
      os.created_time as createdTime,
      os.pay_time as payTime,
      os.deliver_time as deliverTime,
      os.success_time as successTime,
      os.close_time as closeTime,
      os.comment_time as commentTime
    from orders o
    left join order_status os
    on o.id = os.order_id
    where
      o.is_delete = 0
    and user_id = #{paramsMap.userId}
    and os.order_status in (20,30,40)
    order by os.order_id desc
  </select>
</mapper>